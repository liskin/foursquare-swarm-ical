name: Lint

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.7'
          - '3.8'

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"
    - name: Persistent Github pip cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: pip-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml', 'setup.cfg', 'setup.py', 'Makefile') }}
        restore-keys: |
          pip-${{ runner.os }}-${{ matrix.python-version }}-
          pip-${{ runner.os }}-
    - name: Persistent Github venv cache
      uses: actions/cache@v2
      with:
        path: .venv/
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml', 'setup.cfg', 'setup.py', 'Makefile') }}
    - name: Install dependencies
      run: |
        make venv
        echo "::add-path::$PWD/.venv/bin"
    - name: flake8
      uses: liskin/gh-problem-matcher-wrap@v1
      with:
        linters: flake8
        run: flake8 src/
    - name: mypy
      uses: liskin/gh-problem-matcher-wrap@v1
      with:
        linters: mypy
        run: mypy --show-column-numbers src/
    - name: isort
      uses: liskin/gh-problem-matcher-wrap@v1
      with:
        linters: isort
        run: isort --check src/
    - name: Check README examples
      run: |
        make update-readme
        git diff --exit-code -- README.md
